                                                                    // CLASE 1


// EJEMPLOS DE VARIABLES

var ejemploVariable = 5;
let ejemploVariable2 = 8;
const ejemploConstante = 4;

// VAR Y LET PUEDEN SER REASIGNADAS
// CONST es una variable FIJA! Datos que no se modifican.

// EJEMPLIOS DE VARIABLES LET VAR Y CONST EN OPERACIONES MATEMATICAS

console.log("Ejemplo de VAR: " + ejemploVariable);
console.log("Ejemplo de LET: " + ejemploVariable2);
console.log("Ejemplo de CONST: " + ejemploConstante);


let resultadoProducto = ejemploConstante * ejemploVariable;
console.log("El resultado del ejercicio 1: " + resultadoProducto);

var resultadoSuma = ejemploVariable + ejemploVariable2;
console.log ("El resultado del ejercicio 2: " + resultadoSuma);

let resultadoCalculoVariables = resultadoProducto + resultadoSuma;
console.log ("El resultado de la suma de resultados de VARIABLES: " + resultadoCalculoVariables);

let resultadoAlgebra = resultadoCalculoVariables - ejemploVariable * ejemploConstante;
console.log ("Las fórmulas matemáticas funcionan en términos, ejemplo: " + resultadoAlgebra);


// EJEMPLOS CON TEXTO

var texto1 = "Ignacio";
let texto2 = "Sesin" ;
const texto3 = "Soltero";


let frase1 = texto1 + " " + texto2;
var frase2 = texto1 + " " + texto2 + " " + texto3;

console.log("Ejemplos de variables de texto concatenadas: "  + frase1);
console.log("Ejemplos de variables de texto concatenadas: " + frase2);


// EJEMPLO TEXTO Y NUMERO

var mezclaVariables = ("Nombre: " + texto1 +" " + "Edad: " + resultadoSuma);
console.log ("Ejemplo de Variables de Texto y Número: " + mezclaVariables);

// INGRESOS DEL LADO DEL NAVEGADOR
// MEZCLAS DE VARIABLES
// RECOMENDACION DE BUEN USO "EL ALERT ESTA PRACTICAMENTE EN DESUSO"

let nombre = prompt("Ingrese su nombre: ");
let apellido = prompt("Ingrese apellido: ");
let telefono = prompt("Ingrese teléfono de contacto: ");

var datosUsuario = (nombre + " " + apellido + " " + telefono);
console.log ("Nombre: " + nombre);
console.log ("Apellido: " + apellido);
console.log ("Teléfono de contacto: " + telefono);
console.log ("Los datos del usuario son: " + datosUsuario);
alert ("Bienvenido " + nombre + " " + apellido + "!"); 



//  ------------------------------------------------------------------------------                     
                                                               // CLASE 2


// REPASO CLASE 1
// ELEMENTOS DE ENTRADA
let nombre = prompt("Ingrese su nombre: ");
var mensaje = "El nombre ingresado es: ";

//ELEMENTOS DE SALIDA
alert (mensaje + nombre);
console.log (mensaje + nombre);



// CONDICIONALES CON NUMERO


let variableV = 5;
console.log ("la variable es: " + variableV);


if (variableV == 5){ 
    console.log("IF IGUAL A LA VARIABLE");
}

if (variableV >= 5){ 
    console.log("IF MAYOR O IGUAL A LA VARIABLE");
}
if (variableV <= 5){ 
    console.log("IF MENOR O IGUAL A LA VARIABLE");
}
if (variableV < 5){ 
    console.log("IF MENOR A LA VARIABLE");
}
if (variableV > 5){ 
    console.log("IF MAYOR A LA VARIABLE");
}

// CONDICIONALES CON ATRIBUTOS

let nombreUsuario = prompt("Ingrese su nombre: ");

if (nombreUsuario == null) {
    alert ("Debes ingresar un nombre");
} else {
    alert ("El nombre ingresado es: " + nombreUsuario);
}

if (nombreUsuario != null) {
    alert ("El nombre ingresado es: " + nombreUsuario);
} else  {
    alert ("Debes ingresar un nombre");
}


// CONDICIONALES ANIDADAS


alert ("Bienvenidos a Moe´s");
let edad = prompt ("Ingrese su edad: ");

if (edad <= 12) {
    alert ("Aún eres un niñe");
} else if (edad < 18) {
    alert ("Ya eres un adolescente!");
} else if (edad >= 18) {
    alert ("Ya puedes comprar aquí");
}


// VARIABLES BOOLEAN

let edadLegal = "18";
let edadUsuario = prompt ("Ingrese su edad: ");

if (edadLegal <= edadUsuario) {
    alert ("Bienvenidxs a Moe´s");

} else {
    alert ("No podes comprar alcohol")
}


// OPERADORES LOGICOS



== ES IGUAL
=== ESTRICTAMENTE IGUAL
!= DISTINTO
!== ESTRICTAMENTE DISTINTO
< MENOS
> MAYOR
<= MENOR O IGUAL
>= MAYOR O IGUAL
&& Y
|| O
! NO



// ------------------------------------- 
//                                              CLASE 3

// CICLOS O BUCLES
//  FOR - WHILE - DO WHILE


                                                           // FOR
 
for ("desde"; "hasta,"; "actualización") {
} 
 
for ( i=2; i<=20; i++) {
    console.log("El valor de i es: " +i);
} 


 
var var1 = 10;
var1 = var1 + 5;
for (let var2 = 1; var2 <=10; var2++) {
    console.log (var2);
    var1 --;
    console.log(var1);
} 


let numeroUsuario = parseInt(prompt("Ingresar número: "));
for (let i = 0; i <= 20; i++) {
    let resultado = numeroUsuario * i;
    console.log (numeroUsuario + "*" + i + "=" + resultado );
}



let numeroUsuario = parseInt(prompt("Ingresar número: "));
for (let i = 0; i <= 1; i++) {
    
    let resultado = numeroUsuario * i;
    console.log (numeroUsuario + "*" + i + "=" + resultado );
}



for (let i = 1; i <= 20; i=i+1) {
    let nombreUsuario = prompt("Ingrese los nombres de su familia directa: ");
    console.log ("Turno Nº" + i + " a nombre de " + nombreUsuario );
    if (nombreUsuario == null){
        console.log("Ingreso de break");
        break;
    }
}
 

                                                     // EJEMPLO DE BREAK !


var calorias = 0;
var maximoDiario = 2500;

for (let i = 1; i <=20; i++) {
    let caloriasUsuario = parseInt(prompt("Idique la carga calórica de los consumido en la comida nº " + i));
    calorias = calorias + caloriasUsuario;
    console.log ("En la comida nº" + i + " consumió " + caloriasUsuario) ;
 
    if (calorias > maximoDiario){
        alert("Excediste el límite diario");
        console.log ("El total de calorías consumido es de: " + calorias) ;
        break;
    }
    
}



                                                            // CONTINUE

for (let i=1; i <=10; i++ ){
    console.log("Funcionamiento general: " + i);
    if (i==2 || i==4 || i==6 || i==8) {
        console.log ("Condicion CONTUNUE: " + i);
        continue;
    }
    console.log ("Condicion fuera del IF " + i);
}


                                                             // WHILE


let varW = true;
let i = 0;

while (varW) {
    console.log ("Repetido infinito" + i);
    
    if (i ==25) {
        console.log ("Entre al break");
        break;
    }
    i++;
}




let datos = prompt ("Ingrese su nombre: ");


while (datos != null) {
    alert ("Bienvenide "+ datos);
    datos = prompt ("Ingrese su telefono: ");
    alert ("Le contactaremos al " + datos);
    datos = prompt ("Ingrese su email: ");
    alert ("Le enviaremos un correo a " + datos);
    break;
    }
    if (datos == null) {        
        alert ("Ingrese el dato correspondiente");
    
}



//                                     ------------- DO WHILE ---------


let repetir = false;

do {
    console.log ("Unica vez");

}while (repetir);

// EJEMPLO 

let numero = 0;

do {
    numero = prompt ("Ingresar un número");
    console.log(numero);
} while (parseInt(numero));




//               -------------------          SWITCH ----------------

let numero = parseInt(prompt("Ingresa tu edad:"));


switch (numero) {
    case 10:
        alert ("Clasificado E");
        break;
    case 13:
        alert ("Clasificado T");
        break;
    case 17:
        alert ("Clasificado M");
        break;
    case 18:
        alert ("Clasificado A");
        break;
    default:
        alert ("Es importante conocer la clasificación de tu edad!");
        break;
}



// ---------- EJEMPLO MEZCLA

let nombre = prompt("Ingrese su nombre:");

while (nombre != null) {
    switch (nombre) {
        case "Ana":
            alert ("Hola " + nombre);
            break;
        case "Juan":
            alert ("Hola " + nombre);
            break;
        default:
            alert ("Quien sos?");
            break;
    }
    nombre = prompt ("Ingresá tu nombre!");
}





// --------------------------- CLASE 4
// FUNCIONES



function saludo () {
    alert ("Bienvenidx a Domo - Seguridad Inteligente! Gracias por confiar en nosotros");
}
function despedida () {
    alert ("Hasta pronto! Seguiremos en contacto.")
}

saludo ();
despedida ();
// ----------------------- FUNCION QUE APLICA FUNCIONES ANIDADAS
function saludoCompleto (){
    saludo();
    despedida();
}


saludoCompleto();  // <---- así se ejecuta una función.






function nombreUsuario () {
    var ingresarNombre = prompt ("Ingresar nombre:");
    alert ("El nombre ingresado es: " + ingresarNombre);

    if (ingresarNombre == null) {
        var ingresarNombre = prompt ("Debe ingresar su nombre completo:");
        alert ("El nombre ingresado es: " + ingresarNombre);
    }
}

nombreUsuario ();



//                  --------------------- PARAMETROS
// no usar más de 6 o 7 parámetros.



let nombre = prompt("Ingrese su nombre: ");
let telefono = prompt ("Ingrese su teléfono de contacto:");
let email = prompt ("Ingrese su email: ");

// LOS PARAMETROS SON VALORES O VARIABLES QUE NECESITA O UTLIZA LA FUNCTIO

function identificacion (param1, param2, param3) {

    console.log ("El nombre ingresado es: " + param1);
    console.log ("El telefono ingresado es: " + param2);
    console.log ("El email ingresado es: " + param3);

}


identificacion (nombre, telefono,email);
identificacion (email, telefono,nombre);



let resultado = 0;
let numero1 = prompt ("ingrese un número: ");
let numero2 = prompt ("ingrese un número: ");


function producto (param1,param2) {
    resultado = param1 * param2;
    
}

producto (numero1,numero2);
alert (resultado);



// ---------------------------------RETURN ---------------------



let numero1 = parseInt (prompt ("ingrese un número: "));
let numero2 = parseInt(prompt ("ingrese un número: "));

function producto (param1,param2) {
    return (param1 * param2);
}

let resultado = producto (numero1,numero2);
console.log ("El resultado es: " + resultado);
console.log ("El resutado es:" + producto(5,numero2));



function nombreCompleto () {
    let nombre = prompt("Ingrese nombre:");
    let apellido = prompt("Ingrese apellido:");

    return nombre + " " + apellido;
}

var nombre_Completo = nombreCompleto();
console.log ("El nombre ingresado es: " + nombre_Completo);



// -------------------CALCULADORA ------------------
// RETURN CON SWITCH


 
var n1 = parseInt(prompt("Ingrese un valor"));
var operacion = prompt("Ingrese una operacion: +,-,*,/");
var n2 = parseInt(prompt("Ingrese otro valor"));

function calculadora (n1,operacion,n2) {

    switch (operacion) {
        case "+":
            return n1 + n2;
            break;

        case "-":
            return n1 - n2;
            break;
        case "*":
            return n1 * n2;
            break;
        case "/":
            return n1 / n2;
            break;
        default:
            return 0;
            break;
    }
}
console.log ("La función aplicada " + n1 + operacion + n2);
console.log (calculadora(n1,operacion,n2 ));

 

//  ---------------------- VAR VS LET
// VAR ES VARIABLE GLOBAL
// LET ES VARIABLE DENTRO DE FUNCION, POR EJMPLO.
// EJEMPLO DE CALCULADORA CON VAR (ARRIBA) CALCULADORA CON LET ! (ABAJO).


// ------------- LET 
// ------- ESTO NO FUNCIONA! 


function sumar (param1, param2) {
    let resultado1 = 20;
    resultado1 +=  + param1 + param2;
    return resultado1;
}
sumar (20,50)
console.log ("Resultado: " + resultado1); 



// ---------ESTO SI FUNCIONA
function sumar1 (param1, param2) {
    let resultado1 = 20;
    resultado1 +=  + param1 + param2;
    return resultado1;
}

console.log("Resultado: " + sumar1(20,50)); 


// -------------------------------VAR


var resultado2 =30;
function sumar (param3, param4) {

    resultado2 +=  + param3 + param4;
    return resultado2;
}
sumar (20,50);
console.log ("Resultado: " + resultado2);



let prod1 = "Pan";
let prod2 = "Medallón";
let prod3 = "Queso";
let prod4 = "Tomate";
let producto = "";


let operacion1 = prompt("Agregamos queso?");

if  (operacion1 == "si" || operacion1 == "SI") {
    producto = prod1 + " , " + prod2 + " , " + prod3;
}else {
    producto = prod1 + " , " + prod2;
}

let operacion2  = prompt ("Agregamos tomate?");

if (operacion2 == "si" ||  operacion2 == "SI") {
    producto += " y " + prod4;
}else {
    producto;
}

alert("Detalle de pedido: " + producto);






// --------------------------FUNCIONES ANONIMAS

const suma = function (a,b) { return a+b}; // CLAVE ENTENDER CUANDO APLICAR RETURN
const resta = function (a,b) { return a-b}; // el return es para "devolver" el resultado de la funcion a quien la llama (no necesariamente matemático)

console.log ("La suma es:" + suma(50,20));
console.log ("La resta es: " + resta(50,20));


var pedirNombre = function (a,b) {
    console.log("El nombre es: " + a + " " + b);
}

pedirNombre(prompt("Ingresá tu nombre: "), prompt("Ingresá tu apellido"));




// ----------------- FUNCIONES FLECHAS
// -----------------


const suma = (a,b) => { return a+b}; // CLAVE ENTENDER CUANDO APLICAR RETURN
const resta = (a,b) => { return a-b}; // el return es para "devolver" el resultado de la funcion a quien la llama (no necesariamente matemático)
const iva = (x) => {return x * 0.21}; // ()=>{} : FUNCION ANONIMA


console.log ("La suma es:" + suma(50,20));
console.log ("La resta es: " + resta(50,20));



var producto = 1000;
var precioDescuento = 100;
var precioParcial = resta(suma(producto, iva(producto)), precioDescuento);
console.log ("Precio parcial: " + precioParcial);










// ------------------------------ CLASE 5 --------------------
// OBJETOS: UNA COLECCION DE DATOS RELACIONADOS CON FUNCIONALIDAD (VARIABLES), LLAMADAS PROPIEDADES O ATRIBUTOS.

let nombre = prompt("Ingrese nombre: ");
let apellido = prompt("Ingrese apellido: "); 
let edad = prompt("Ingrese su edad: ");
let direccion = prompt("Ingrese su dirección:");

const persona1  = {nombreCompleto: nombre + " " + apellido,edad: edad, direccion: direccion};
// COMO ACCEDER A LOS DATOS OPCION 1
console.log(persona1);


// COMO ACCEDER A LOS DATOS OPCION 2
console.log( "Nombre completo: " + persona1.nombreCompleto); // SE USA EL OPERADOR " . "
console.log( "Edad: " + persona1.edad);
console.log( "Dirección: " + persona1.direccion);


// COMO ACCEDER A LOS DATOS OPCION 3
console.log ("Nombre completo:" + persona1["nombreCompleto"]);
console.log ("Edad:" + persona1["edad"]);



// ---------------------------- MODIFICAR PROPIEDADES/ATRIBUTOS DE UN OBJETO

console.log(persona1);
persona1.nombre = prompt("Ingresar nuevo nombre: "); // UTILIZANDO EL OPERADOR " . "
persona1["edad"] = prompt ("Ingresar nueva edad:");

// ---------------------------------------- CONSTRUCTORES
// ES UNA FUNCION CONSTRUCTORA


function persona(var1, var2, var3) {
    this.nombre = var1 = prompt("Ingrese su nombre completo: ") ;
    this.edad = var2 = prompt("Ingrese su edad: ") ;
    this.direccion = var3 = prompt("Ingrese su dirección: ") ;
}

const persona1 = new persona (nombre, edad, direccion);
const persona2 = new persona (nombre, edad, direccion);

console.log(persona1);
console.log(persona2);







    


// METODOS EN OBJETOS

let cadena = "HOLA CODERS";

console.log("Cadena original " + cadena);
console.log("Cadena con longitud: " + cadena.length); // largo de caracteres
console.log("Cande minusculas "+ cadena.toLocaleLowerCase()); // todo mayus
console.log("Cadena mayúscylas " + cadena.toUpperCase()); // todo minus




// METODO

function Persona(var1,var2,var3) {
    this.nombre =var1;
    this.edad =var2;
    this.direccion =var3;
    this.hablar = function () {console.log ("Hola soy " + this.nombre)};
}

function Producto(nombre,precio) {
    this.nombre = nombre;
    this.precio = precio;
    this.descuento = 10;
    this.precioConDescuento = function() {return this.precio - ((this.precio * this.descuento) / 100)};
}

const producto = new Producto ("Iphone" , "180000");
console.log ("Nombre: " + producto.nombre);
console.log ("Precio: " + producto.precio);
console.log ("Precio con descuento: " + producto.precioConDescuento());





// RESUMEN METODO



class datosCliente {
    constructor(cliente) {
        this.nombre = cliente.nombre.toUpperCase();
        this.apellido = cliente.apellido.toUpperCase();
        this.edad = cliente.edad;
        this.telefono = cliente.telefono;
    }
    sintesis() {
        alert("Hola " + this.nombre + ". Te contactaremos dentro de las próximas 24 horas hábiles al " + this.telefono + " para confirmar el turno de tu Asistencia Técnica. Muchas gracias por confiar en Domo  - Seguridad Inteligente.");
}   }  
    let cliente = { 
        nombre: prompt("Ingrese su nombre: "),
        apellido: prompt("Ingrese su apellido"),
        edad: prompt ("Ingrese su edad: "),
        telefono: prompt ("Ingrese su teléfono de contactp: "),
    }

const cliente1 = new datosCliente(cliente);
console.log (cliente1);
cliente1.sintesis();





// -------------- OPERADOR IN Y FOR IN ------------------
// IN: devuelve true si la propiedad especificada existe en el objeto.
// FOR IN: permite acceder a todas las propiedades del objeto.

const persona1 = {nombre: prompt("Ingresar nombre"), edad: 39, calle: "Pampas 7785"};

// IN: SI HAY O NO HAY ESA PROPIEDAD SALE TRUE O FALSE.
console.log("nombre" in persona1);
console.log("edad" in persona1);
console.log("color" in persona1);


// FOR IN: VER LAS PROPIEDADES DEL OBBJETO.
for (const prop in persona1) {
    console.log("Propiedad: " + persona1[prop]); // NOS MUESTRA TODAS LAS VARIABLES
    console.log("Tipo de dato: " + typeof persona1[prop]); // QUE TIPO DE VARIABLE TENEMOS?
    console.log("Valor: " + persona1[prop]); // QUE TIPO DE VARIABLE TENEMOS?
}



//  -------------------- CLASES
// CLASES: OPCION CONSTRUCTORA CON VARIOS METODOS

class persona {
    constructor (var1,var2,var3,var4) {
    this.nombre = var1;
    this.apellido = var2;
    this.edad = var3;
    this.telefono = var4;
    }
    hablar () {
        console.log("Hola soy " + this.nombre);
    }
}

const persona1 = new persona ("Homero","Simpson",39, 3515281618);
console.log(persona1);
persona1.hablar();



// EJEMPLO PRODUCTO CON CLASS

class producto {
    constructor (nombre,precio) {
    this.nombre = nombre.toUpperCase();
    this.precio = precio;
    this.vendido = false;
    }

    iva() {
        this.precio = this.precio * 1.21;
    }

    vender () {
        this.vendido = true;
    }
}

const producto1 = new producto ("Arroz",150);
const producto2 = new producto ("Fideos",100);
console.log(producto1);
console.log(producto2);
producto1.iva(); 
producto2.iva(); // SE LE AGREGA IVA
producto1.vender(); // LE CAMBIA EL ESTADO DE FALSE A TRUE

console.log(producto1);
console.log(producto2);





// --------------------------------  CLASE 6
// ---------------------------ARRAYS -----------------
// Arrays: es un objeto que almacena una lista de elementos: NUMEROS, STRING, VALORES BOOLEANOS,OBJETOS O LISTA DE LISTAS.
// los valores del arrays pueden ser distintos y es posible agregar o quitar un elemento en cualquier momento.
// los elementos array tienen un orden que comienzan en 0.



// ESTABLECIENDO ARRAYS

const arrayA = [];
const arrayB = [1,2.5,3,4,5];
const arrayC = ["C1","C2","C3"];
const arrayD = [true,false,true,false];
const arrayE = [1,false,"C4"];



// mostrar arrays


console.log(arrayA);
console.log(arrayB);
console.log(arrayC);
console.log(arrayD);
console.log(arrayE);


// acceso al array para utilización
// ejemplo con arrays iniciales, usando palabra array CON NUMEROS
let resultado1 = arrayB[0] + arrayB [4];
let resultado2 = arrayB[1] + arrayB [4];
let resultado3 = arrayB[2] + arrayB [3];


// ejemplo usando const y corchetes sin "array" CON NUMEROS
const numeros = [2,4,6,8,10];
let resultado4 = numeros[0] + numeros [4];
let resultado5 = numeros[1] + numeros [4];
let resultado6 = numeros[2] + numeros [3];


//ejemplo usando const y corchetes sin "array" CON STRING (valores texto)
let resultado7 = arrayC[0]+" y "+arrayC[2];
let resultado8 = arrayC[1]+" y "+arrayC[2];
let resultado9 = arrayC[0]+" y "+arrayC[1];




console.log(resultado1);
console.log(resultado2);
console.log(resultado3);
console.log(resultado4);
console.log(resultado5);
console.log(resultado6);
console.log(resultado7);
console.log(resultado8);
console.log(resultado9);




// RECORRIDO DEL ARRAY
// se usa un bucle para acceder a cada elemento
// el array es un objeto iterable, permite usar distintas estructuras para iterar sobre ellos.


const condimentos = ["azucar","huevos","harina","sal","pimienta"];

for (let i=0; i<5;i++) {
    console.log("Condimentos: " + condimentos[i]);
}



// EJEMPLO DE COMO TRAER ELEMENTOS DE HTML



function datos() {
    
    var nombre = document.getElementById("nombre").value;
    var email = document.getElementById("email").value;
    var telefono = document.getElementById("telefono").value;
    var lista = [nombre,email,telefono];

    for (i=0; i<4;i++) {
    alert("Campo #" + i + ": " + lista[i]);
    }
}



// METODOS Y PROPIEDADES DE LOS ARRAYS

//PROPIEDAD:
// length: propiedad que nos dice cuantos elementos tiene el array. Es una PROPIEDAD NO USA () AL FINAL.
const miArray = ["marca", 3 , "modelo", "colores"];
console.log ("Longitud array 1: " + miArray.length);



//METODO: tiene () al final.
//.toString: convierte array en string
const miArray2 = ["marca", 3 , "modelo", "colores"];
console.log ("Valores STRING Array2: " + miArray2.toString());

//METODOS CONCATENADOS
// prestar atención en primero colocar ".toString" para transformar a texto y luego .toupperCase.
const miArray3 = ["marca", 3 , "modelo", "colores"];
console.log ("Valores STRING MAYUS Array3: " + miArray3.toString().toLocaleUpperCase());

// CONCATENAR METODOS EN VARIABLES:
const miArray4 = ["marca", 3 , "modelo", "colores"];
var var1 = miArray4.toString();
var var2 = var1.toLocaleUpperCase();
console.log("Strin mayus con variables ARRAY 4: " + var2);






// -------------- AGREGAR ELEMENTOS AL ARRAY
// para agregar un elemento se utiliza el metodo PUSH

const miArray5 = ["marca", 3 , "modelo", "colores"];
var var1 = miArray5.toString();
var var2 = var1.toLocaleUpperCase();
console.log("Strin mayus con variables array5: " + var2);
console.log ("Longitud array5: " + miArray5.length);



//AGREGAR ELEMENTO CON PUSH
miArray5.push ("talle"); // agregar elemento
console.log ("Longitud array5: " + miArray5.length);
console.log("Strin mayus con variables array5: " + miArray5.toString());



// AGREGAR ELEMENTO CON PROMPT
var var3 = prompt("Ingrese F/M: ");
miArray5.push(var3);
console.log ("Longitud array5: " + miArray5.length);
console.log("Strin mayus con variables array5: " + miArray5.toString());



// ------------- JOIN
// ES UNA PROPIEDAD, NO USA() AL FINAL.
// PERMITE JUNTAR TODOS LOS ELEMENTOS EN CADENA STRING - ES COMO toString pudiendo cambiar las "," entre elementos
const miArray6 = ["Local", "Marca" , "modelo", "colores", "talle"];
console.log("MiArray6: " + miArray6.join("\n")); // en vez de separar los elementos con "," con \n los pones uno debajo del otro.



// ------------- CONCAT
// METODO: PERMITE CONCATENAR 2 ARRAY EN 1 ARRAY RESULTANTE

const miArray7 = ["marca", "modelo"];
const miArray8 = ["talle", "color"];

const miArrayConjunto = miArray7.concat(miArray8);

console.log("Mi array7: " + miArray7.toString());
console.log("Mi array8: " + miArray8.toString());
console.log("Mi arrayConjunto: " + miArrayConjunto.toString());



// SLICE
// METODO QUE DEVUELVE UNA COPIA DE UNA PARTE EN UN NUEVO ARRAY

const nombres = ["Ignacio", "Diogenes", "Juan", "Mariu", "Candelaria", "Elisa"];
const nombresPablo = nombres.slice(0,3);
const nombresMariu = nombres.slice(3,nombres.length); // (3, nombres.length) se usa para ir desde el 3 al final.
const nombresMyP = [nombres.slice(0,1), nombres.slice(3,6)]; // SLICE CONCATENADOS

console.log("Todos los nombres: " + nombres.toString());
console.log("Nombres del 0 al 3: " + nombresPablo.toString());// .slice(0,3)
console.log("Nombres del 3 al final: " + nombresMariu.toString()); // .slice(3,length)
console.log("Nombres salteados: " + nombresMyP.toString()); // .slice concatenados ver 5 RENGLONES ARRIBA nombresMyP.




// CAGAR ARRAYS CON ENTRADAS

const listaVacia = [];
let cantidad = 3;
// usamos el do .. while... para cargar nombres por prompt.

do {
    let entrada = prompt("Ingresar nombre: ");
    listaVacia.push(entrada.toUpperCase());
    console.log (listaVacia);
    
} while (listaVacia.length != cantidad) {
}

console.log ("lista 1: " + listaVacia);

// ACA QUITO el ultimo  ELEMENTO DEL ARRAY Y LO MUESTRO
listaVacia.pop();
console.log("La lista sin elemento: "+ listaVacia);

// ACA IDENTIFICO EL ULTIMO ELEMENTO  REMOVIDO
var nombre = listaVacia.pop();
console.log("El elemento eliminado fue: " + nombre);

// PRECAUCION CON LOS .pop QUE AL HABER 2 EJEMPLO ELIMINA 2 veces.



// CARGAR NOMBRES CON UNA FUNCION

const listaVacia2 = [];



function cargarNombres() {
    while (listaVacia2.length < cantidad) {
        let entrada = prompt("Ingresar nombre: ");
        listaVacia2.push(entrada.toUpperCase());
        console.log (listaVacia2);
    }
    console.log ("lista 2: " + listaVacia2);
}
cargarNombres();


// -------------- ARRAYS DE OBJETOS
// podemos asignar objetos o agregar mediante push o constructor.

const objeto1 = {id: 1, producto: "arroz"};
console.log(objeto1);

const array1 = [objeto1, {id:2, producto:"fideos"}];


array1.push({id: 3, producto:prompt("Ingrese producto:")});
console.log(array1);





// ----------------FOR .. OF
// Nos permite recorrer el array ejecutando un blpoque de código por cada elemento del objeto.

const masa = [{id:1,producto:"harina"},{id:2,producto:"agua",precio: "150"},{id:3,producto:"sal"}]; // ARRAY de objetos


for (const producto of masa) {
    console.log ("ID: " + producto.id , "PRODUCTO: " + producto.producto, "Precio: " + producto.precio);
}



// -------------------------- TYPE OF ---------------
// Es un operador que devuelve una cadena que indica el tipo de dato del parámetro.

let miFuncion = (a,b) => a+b;
let forma = "redonda";
let tamano = 1;

console.log(typeof miFuncion);
console.log(typeof forma);
console.log(typeof tamano);


let nombre = prompt("Ingrese numero: "); // EL PROMP siempre es string

if (typeof nombre === "string"){
    alert("El valor ingresado es correcto!")
}else {
    alert("El valor ingresado es incorreto!")
}
console.log(typeof nombre);





// ---------------------- EJEMPLO INTEGRADOR DE TODO LO VISOT
// utilizando objetos y arrays


class Producto {
    constructor (nombre,neto,vendido,iva,precioFinal) {
        this.nombre = nombre.toUpperCase();
        this.neto = parseFloat(neto);
        this.vendido = vendido = false;
        this.iva = iva =  1.21;
        this.precioFinal = precioFinal = this.neto * this.iva;
        
    }
    sumaIva() {
        this.precioFinal = this.neto*this.iva;
    }

}
const productos = [];
productos.push(new Producto("Arroz", 100));
productos.push(new Producto("Tallarines", 200));
productos.push(new Producto("Queso", 300 ));

for (const producto of productos){
 console.log(producto.sumaIva());
}

console.log(productos);
console.log(productos[1].nombre + " " + productos[1].neto);





//  --------------- METODO FIND
// Es un método que devuelve el valor del primer elemento del Array que satisface 
//la funcion de comprobacion enviada por parámtro.

const numeros = [1,2,3,4,5,6];
const encontrado = numeros.find(elementos => elementos >= 3);
console.log(numeros);
console.log(encontrado);


const nombres = ["Ana", "Elisa", "Maria"];
const encontrados = nombres.find(nombres => nombres = null);
const encontrados2 = nombres.find(nombres => nombres = "Ana");
console.log(nombres);
console.log(encontrados);
console.log(encontrados2);



// METODO FILTER 
// devuelve el valor dle primer elemento del Array que satisface la funcion de comprobacion enviada por parametro.

const numeros1 = [1,2,3,4,5,6];
const encontrado3 = numeros1.filter(elementos => elementos > 3);
console.log("Todos los números: " + numeros1);
console.log("Encontrados mayores a 3: " + encontrado3);


const nombres1 = ["Ana", "Elisa", "Maria"];
const encontrados3 = nombres1.filter(nombres1 => nombres1 = null);
const encontrados4 = nombres1.filter(nombres1 => nombres1 != "Ana");
console.log("Todos los nombres: " + nombres1);
console.log("Encontrados iguales a null: " + encontrados3);
console.log("Encontrados distitntos de Ana: " + encontrados4);



// FILTER CON "INCLUDES"

const nombres2 = ["Ana", "Ana Maria", "Ana Laura", "Elisa","Maria"];
const encontrados5 = nombres2.filter(nombres2 => nombres2.includes("Ana") );
console.log("Encontrados que incluyen  Ana: " + encontrados5);



// METODO MAP
// se utiliza para crear un nuevo Array con todos los elementos del Array original transformados
// segun las operaciones de la funcion enviada por parametro.


const map1 = [1,2,3,4,5];
const map1PorDos = map1.map(elementos => elementos *2);
const map1MasCien = map1.map(elementos => elementos +100);


console.log("Map original: " + map1);
console.log("Map * 2: " + map1PorDos);
console.log("Map + 100: " + map1MasCien);


const map2 = ["Ana", "Ana Maria", "Ana Laura", "Elisa","Maria"];
const lengths = map2.map(nombre => nombre.length);

console.log("Mapa Original: " + map2);
console.log("Mapa de lengths: " + lengths);




// EJEMPLO METODOS EN OBJETOS
//  FIN / FILTER / MAP



const productos = [
                    {id: 1, producto: "arroz", precio: 100},
                    {id: 2, producto: "fideos", precio: 200},
                    {id: 3, producto: "queso", precio: 300},
                    {id: 4, producto: "crema", precio: 150},
                    {id: 5, producto: "pan", precio: 80}
];



const buscarPan = productos.find(producto=> producto.id===3);
console.log(buscarPan);

const baratos = productos.filter(producto=> producto.precio<150);
console.log(baratos);


const aumentos = productos.map(producto=> producto.precio *1.30);
console.log(aumentos);




// --------------------------------- CLASE 7 JSON


// Inicializo las variables con Local Storage
localStorage.setItem("bienvenida", "Hola Coder!");
localStorage.setItem("esValido", true);
localStorage.setItem("unNumero", "0303456");

let mensaje = localStorage.getItem("bienvenida");
let bandera = localStorage.getItem("esValido");
let numero = localStorage.getItem("unNumero");

console.log(mensaje);
console.log(typeof mensaje);
console.log(bandera);
console.log(typeof bandera);
console.log(numero);
console.log(typeof numero);



// Inicializo las variables con Session Storage
sessionStorage.setItem("seleccionados", [1, 2, 3]);
sessionStorage.setItem("esValido", false);
sessionStorage.setItem("email", "info@coderhouse.com");
sessionStorage.setItem("unNumero" , 12345);

let lista = sessionStorage.getItem("seleccionados").split(",");
let lista1 = sessionStorage.getItem("seleccionados");

let bandera = (sessionStorage.getItem("esValido") == true);
let bandera1 = sessionStorage.getItem("esValido");

let email = sessionStorage.getItem("email");

let numero =sessionStorage.getItem ("unNumero")

let numero1 = parseInt(sessionStorage.getItem("unNumero"));


console.log("Lista con split: " +lista);
console.log(typeof lista);
console.log("Lista sin split: " +lista1);
console.log(typeof lista1);

console.log("Bandera: " + bandera);
console.log(typeof bandera);
console.log("Bandera sin true: " + bandera1);
console.log(typeof bandera);

console.log("Email: " + email);
console.log(typeof email);

console.log("Un numero string: " + numero);
console.log(typeof numero);

console.log("Un numero number: " + numero1);
console.log(typeof numero1);




localStorage.numeroPrueba = 5;
console.log("es: " + localStorage.numeroPrueba);

let clave = "toString";
localStorage[clave] = "6";
console.log(clave)/
console.log("es: " + localStorage.[clave]); // NO FUNCIONA
console.log("es: " + localStorage.clave); //  NO FUNCIONA





// RECORRER LAS VARIABLES EN LOCAL STORAGE
for (let i=0; i<localStorage.length; i++) {
    let clave = localStorage.key(i); // establecemos clave como "key", los valores de cada storage.
    console.log("Clave: " + clave);
    console.log("Valor: " + localStorage.getItem(clave));
}

for (let i=0; i<sessionStorage.length; i++) {
    let clave = sessionStorage.key(i);
    console.log("Session Clave: " + clave);
    console.log("Session Valor: " + sessionStorage.getItem(clave));
}





// ELIMINAR ITEMS DEL STORAGE:
console.log("Mensaje: " +localStorage.getItem("bienvenida"));
localStorage.removeItem("bienvenida"); // Elimina 1 ítem
console.log("Mensaje 2: " + localStorage.getItem("bienvenida"));
localStorage.clear(); // Elimina todos los ítems

console.log("Session Storage:  " + sessionStorage.getItem("seleccionados"));
console.log("Session Storage:  " + sessionStorage.getItem("esValido"));
sessionStorage.removeItem("seleccionados"); // Elimina 1 ítem
sessionStorage.clear(); // Elimina todos los ítems


// PASEO POR TODOS LOS SESSION STORAGE BORRADOS: 
for (let i=0; i<sessionStorage.length; i++) {
    let clave = sessionStorage.key(i);
    console.log("Borrado " + clave);
    console.log("Session Valor: " + sessionStorage.getItem(clave));
}






const multiplicar = (a, b) => a * b;
const guardarLocal = (clave, valor) => { localStorage.setItem(clave, valor)};

let ingresarNumero = parseInt(prompt("Ingresar número"));

for (let i=1; i<=10; i++) {
    guardarLocal(i, multiplicar(ingresarNumero, i));
}
for (let i=1; i<localStorage.length; i++) {
    let clave = localStorage.key(i);
    console.log("Clave:  " + clave + " * " +"Valor: " + localStorage.getItem(clave));
}





const producto1 = {id:1, producto:"Arroz"};
localStorage.setItem("producto1", producto1);
console.log("Es: " + localStorage.getItem("producto1"));




// JSON: es un formato que se puede usar en un local storage
// usando STRINGIFY
const producto1 = {id:1, producto:"fideos"};
const enJSON = JSON.stringify(producto1);

console.log(producto1, typeof producto1); // producto1 es un objeto

console.log("En JSON: " + enJSON , typeof enJSON); // el JSON de producto1 es un string

console.log(producto1.producto); // como es obejeto puedo buscar un elemento dentro

// TRANSFORMAR UN STRING DE JSON A UN OBJETO DE JAVA
// con Parse


const prod2 = JSON.parse(enJSON);

console.log (enJSON,typeof enJSON);

console.log(prod2,typeof prod2);
console.log(prod2.producto);






function guardarDatos () {
    let var1 = prompt("Ingresar nombre: ");
    localStorage.setItem("nombre", var1);
    console.log("Nombre: " + var1);
}
function recuperarDatos () {
    let nombre = localStorage.getItem("nombre");
    console.log("Nombre: " + nombre);
}
guardarDatos();
recuperarDatos();



// EJEMPLO APLICADO. ALMACENAR ARRAY DE OBJETOS
 // localStorage.clear();
const productos = [
    {id: 1, producto: "Arroz", precio: 100},
    {id: 2, producto: "Fideos", precio: 70},
    {id: 3, producto: "Pan", precio: 50},
    {id: 4, producto: "Aceite", precio: 120},
    {id: 5, producto: "Vinagre", precio: 120},
    {id: 6, producto: "Sal", precio: 120},
    {id: 7, producto: "Azucar", precio: 120},
    {id: 8, producto: "Dulce de Leche", precio: 120},
]

const guardarLocal = (clave,valor) => {localStorage.setItem(clave,valor)};


// PODEMOS GUARDARLO DE 2 MANERAS:
// 1. 
for (const producto of productos) {
    guardarLocal(producto.id, JSON.stringify(producto));
    //localStorage.setItem(producto.id,producto);
    
}


//2.
//guardarLocal ("listaProductos", JSON.stringify(productos));



// COMO VERLOS
console.log("item 1: "+ localStorage.getItem("1"));
console.log("item 4: "+ localStorage.getItem("4"));
console.log("item 2: "+ localStorage.getItem("2"));
console.log("Lista de productos: " + localStorage.getItem("listaProductos"));



for (let i=1; i<localStorage.length; i++) {
    let clave = localStorage.key(i); // establecemos clave como "key", los valores de cada storage.
    console.log("Clave: " + clave);
    console.log("Valor: " + localStorage.getItem(clave));
}




class Producto {
    constructor (obj) {
        this.nombre = obj.producto.toUpperCase();
        this.precio = parseFloat(obj.producto);
    }
    sumaIva() {
        this.precio = precio *1.21;
    }
}

const almacenados = JSON.parse(localStorage.getItem("listaProductos"));
const productos = [];

console.log (almacenados);
console.log(productos);

for (const productos of almacenados) {
    productos.push(new Producto(objeto));
}

for (const producto of productos) {
    producto.sumaIva();
}
console.log(productos);



// CLASE 8 
// -------------------- DOM
// Es una esctrutura de objetos representada por el navegador.
// hablamos de "nodos": nodo padre, nodo hijo.
// por Ejemplo, la etiqueta  " document.body" accede al Body y su contenido.
//12 TIPOS DE NODOS: 
/*
1: Document: nodo raíz, del que derivan el resto.
2: Element: representa cada etiqueta del HTML, puede contener atributos y derivar otros nodos.
3: Attr: se define un nodo de este tipo para representar cada uno de los atributos de un "Element". par atributo=valor.
4: Text: nodo que contiene texto.
5: Comment: los comentarios en el HTML.
*/

// ACCEDER A UN NODO

console.dir(document);
console.dir(document.head);
console.dir(document.body);

let titulo1 = document.getElementById("titulo");
console.log (titulo1);

let parrafo = document.getElementsByClassName("parrafo"); // usa el name

console.log(parrafo1); // TRAE TODAS LAS ETIQUETAS CON ESTA CLASS
console.log(parrafo1[0]); // TRAE TODA LA INFO Y TEXTO ELEMENTO DEL ARRAY QUE ES LA ETIQUETA
console.log(parrafo1[1].innerHTML); // TRAE EL TEXTO DEL ELEMENTO DEL ARRAY.




let contenedores = document.getElementsByTagName("div"); // TRAE TODAS LAS ETIQUETAS

console.log(contenedores); // TRAE TODAS LAS ETIQUETAS COMO ARRAYS DONDE PODEMOS VER LA CANTIDAD Y NUMEROS
console.log(contenedores[0]); // TRAE TODA LA INFO Y TEXTO ELEMENTO DEL ARRAY PUNTUAL QUE ES LA ETIQUETA.
console.log(contenedores[0].innerHTML); // TRAE EL TEXTO DEL ELEMENTO DEL ARRAY.
console.log(contenedores[1]); // TRAE TODA LA INFO Y TEXTO ELEMENTO DEL ARRAY PUNTUAL QUE ES LA ETIQUETA.
console.log(contenedores[1].innerHTML); // TRAE EL TEXTO DEL ELEMENTO DEL ARRAY.


for  (const parr of parrafo) {
    console.log(parr.innerHTML); // otra forma de traer todos los class "parrafo"
}
for (const contenedor of contenedores) { // otra forma de traer todas las "etiquetas"
    console.log(contenedor.innerHTML);
}


// TAMBIEN SE PUEDEN CREAR ELEMENTOS DESDE JS A HTML
// CREAR ELEMENTO
let parrafoNuevo = document.createElement("p");

//INSETAR ELEMENTO
parrafoNuevo.innerHTML = "<h3> Curso de de JS en CoderHouse <h3>";

//AÑADIR EL NODO ELEMENTO COMO HIJO DEL BODY
document.body.appendChild(parrafoNuevo); // agregar al final del body


//PARA AGREGAR ALGO EN ALGUNA LUGAR DEFINIDIO, PRIMERO DEBEMOS DEFINIRLO.

var parrafo1 = document.getElementById("parrafo1");
parrafo1.appendChild(parrafoNuevo);


// ELIMINAR  ELEMENTO

let borrarParrafo = document.getElementById("parrafo3");
 borrarParrafo.parentNode.removeChild(parrafo3);


// OTRA FORMA


let borrarParrafo = document.getElementById("parrafo3");
var padre = borrarParrafo.parentNode;
console.log(padre);
padre.removeChild(borrarParrafo);


// OBTENER VALORES DEL FORM

var nombre = document.getElementById("nameForm").value;
var email = document.getElementById("emailForm").value;
var telefono = document.getElementById("phoneForm").value;

let datosCliente = (nombre + email + telefono);
console.log(nombre);
console.log(email);
console.log(telefono);


// ASIGNAR VALORES
document.getElementById("emailForm").value = "la concha de tu madre";
console.log(email);



// CREANDO OPCIONES DESDE UN ARRAY

let padre = document.getElementById("personas");
let personas = ["Homero","Marge", "Bart", "Lisa", "Maggie" ];
for (const persona of personas) {
    let li = document.createElement("li");
    li.innerHTML = persona;
    padre.appendChild(li);
}



// PLANTILLAS LITERAL
let producto = {id: 1, nombre:"Arroz", precio:"100"};
let concatenado = "#1 - ID: " + producto.id + " - Producto: " + producto.nombre + " $: " + producto.precio;
let plantilla = `#2 - ID:  ${producto.id} Producto: ${producto.nombre} - $:${producto.precio}`

console.log(concatenado);
console.log(plantilla);


// PLANTILLAS LITERALES e INNERHTML
// Las plantillas son el medio para incluir variables en el HTML de nuevos
// nodos o existentes, modificando l innterHTML.